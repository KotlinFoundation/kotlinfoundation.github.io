{"version":3,"file":"component---src-components-post-index-tsx-content-file-path-home-runner-work-kotlinfoundation-github-io-kotlinfoundation-github-io-src-pages-news-gsoc-2023-kotlinx-benchmark-index-md-26225271ea192776a90a.js","mappings":"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","sources":["webpack://kotlinfoundation.github.io/./src/pages/news/gsoc-2023-kotlinx-benchmark/index.md","webpack://kotlinfoundation.github.io/./src/components/Post/index.tsx","webpack://kotlinfoundation.github.io/./src/components/Layout/index.tsx","webpack://kotlinfoundation.github.io/./src/components/Post/Post.module.css"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"The Kotlin Foundation sponsored four projects for the Google Summer of Code 2023, and we are excited to announce the completion of a project to enhance the \", React.createElement(_components.em, null, \"kotlinx-benchmark\"), \" library! JetBrains, a Kotlin Foundation member, provided mentoring support for this project.\"), \"\\n\", React.createElement(_components.p, null, \"The contributor to this project was \", React.createElement(_components.a, {\n    href: \"https://github.com/wldeh\"\n  }, \"Henok Woldesenbet\"), \", an aspiring software engineer and the mentor was Abduqodiri Qurbonzoda, a software developer working on Kotlin libraries at JetBrains. The project aimed to improve the \", React.createElement(_components.a, {\n    href: \"https://github.com/Kotlin/kotlinx-benchmark\"\n  }, \"kotlinx-benchmark\"), \" library API and user experience.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"introduction\"\n  }, \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.em, null, \"kotlinx-benchmark\"), \" library is an invaluable open-source tool that facilitates the benchmarking of multiplatform code written in Kotlin. Despite its essential function, its user experience had some gaps, confusing users and lacking features that developers have come to expect from benchmarking libraries.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"goals\"\n  }, \"Goals\"), \"\\n\", React.createElement(_components.p, null, \"The primary goals for the project were:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Infuse the library with clear and concise documentation, supplemented with practical usage examples. The absence of comprehensive documentation previously made using \", React.createElement(_components.em, null, \"kotlinx-benchmark\"), \" challenging for many, especially newcomers.\"), \"\\n\", React.createElement(_components.li, null, \"Address user concerns and lint the library API, making it more intuitive and user friendly.\"), \"\\n\", React.createElement(_components.li, null, \"Refine the library's internals, including by enhancing integration tests, improving error feedback through refined validations and task descriptions, and streamlining the profiler's execution process.\"), \"\\n\", React.createElement(_components.li, null, \"Elevate the overall user experience, transforming the \", React.createElement(_components.em, null, \"kotlinx-benchmark\"), \" from a budding tool into a robust library that the Kotlin community can rely on.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"achievements\"\n  }, \"Achievements\"), \"\\n\", React.createElement(_components.p, null, \"Here are the primary achievements made in the Google Summer of Code project:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Documentation for increased accessibility\"), \": Detailed documentation was added, ensuring that anyone, from novices to experts, could dive into, experiment with, and harness the power of the library.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Improved error messages\"), \": A library's UX is significantly influenced by the quality of its error feedback. Error messages were revamped, ensuring they are not only accurate but also instructive, guiding users towards solutions.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Refined integration tests\"), \": Comprehensive integration tests were added to ensure stability across a variety of use cases.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Tech stack modernization\"), \": The library was migrated to the latest versions of Gradle and JMH, and transitioned from Groovy DSL to the latest version of Kotlin DSL to optimize the build scripts.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Streamlined profiler usage\"), \": In response to feedback from our users, the process of running profilers was simplified, facilitating a smoother user experience.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"next-steps\"\n  }, \"Next Steps\"), \"\\n\", React.createElement(_components.p, null, \"To further enhance \", React.createElement(_components.em, null, \"kotlinx-benchmark\"), \", we are planning to:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Support the Android target and integrate the \", React.createElement(_components.em, null, \"androidx.benchmark\"), \" framework into \", React.createElement(_components.em, null, \"kotlinx-benchmark\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Implement an IntelliJ IDEA plugin to support running benchmarks with a click of a run button, the same way as running unit tests.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"If you'd like to help continue improving \", React.createElement(_components.em, null, \"kotlinx-benchmark\"), \", check out the \", React.createElement(_components.a, {\n    href: \"https://github.com/Kotlin/kotlinx-benchmark/issues\"\n  }, \"open issues\"), \" for ideas on where to jump in.\"), \"\\n\", React.createElement(_components.p, null, \"Thank you Henok and Abduqodiri for making \", React.createElement(_components.em, null, \"kotlinx-benchmark\"), \" even better for Kotlin developers!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/kotlinfoundation.github.io/kotlinfoundation.github.io/src/pages/news/gsoc-2023-kotlinx-benchmark/index.md\";\nimport {useTextStyles} from '@jetbrains/kotlin-web-site-ui/out/components/typography';\nimport cn from 'classnames';\nimport {useStaticQuery, withPrefix} from 'gatsby';\nimport Layout from '../Layout';\nimport {Markdown} from '../Markdown';\nimport * as style from './Post.module.css';\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {jsxs as _jsxs} from \"react/jsx-runtime\";\nfunction PageTemplate(_ref) {\n  var _post$frontmatter$soc, _post$frontmatter$cov;\n  let {children, ...props} = _ref;\n  const textCn = useTextStyles();\n  const {location} = props;\n  const {allMdx: {nodes: posts}} = useStaticQuery(\"914412448\");\n  const post = posts.find(post => withPrefix(post.fields.slug) === location.pathname);\n  const {title, date} = post.frontmatter;\n  const coverImage = ((_post$frontmatter$soc = post.frontmatter.socialImage) === null || _post$frontmatter$soc === void 0 ? void 0 : _post$frontmatter$soc.publicURL) || ((_post$frontmatter$cov = post.frontmatter.coverImage) === null || _post$frontmatter$cov === void 0 ? void 0 : _post$frontmatter$cov.publicURL);\n  props.pageContext.frontmatter = {\n    ...props.pageContext.frontmatter,\n    contactUs: true\n  };\n  return _jsxs(Layout, {\n    ...props,\n    socialImage: coverImage,\n    children: [_jsx(\"p\", {\n      className: cn(textCn('ktl-text-3'), 'ktl-text--gray'),\n      children: date\n    }), _jsx(\"h1\", {\n      className: cn('ktf-h2 ktf-h3--mm', style.title),\n      children: title\n    }), _jsx(Markdown, {\n      children: children\n    })]\n  });\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import '@rescui/typography/lib/font-jb-sans-auto.css';\nimport '@jetbrains/kotlin-web-site-ui/out/components/typography/index.css';\nimport '@jetbrains/kotlin-web-site-ui/out/components/grid/index.css';\nimport '@jetbrains/kotlin-web-site-ui/out/components/cta-block/index.css';\nimport cn from 'classnames';\nimport { ReactNode } from 'react';\nimport './typography.css';\nimport './heading.css';\nimport { ContactUs } from '../ContactUs';\nimport { Footer } from '../Footer';\nimport { Header } from '../Header';\nimport { Markdown } from '../Markdown';\nimport { SEO } from '../Seo';\nimport * as styles from './layout.module.css';\nimport { LocationContext } from './locationContext';\n\nexport enum LayoutSize {\n  Regular = 'regular',\n  Narrow = 'narrow',\n  Wide = 'wide',\n}\n\ninterface MDLayoutProps {\n  title?: string;\n  layout?: LayoutSize;\n  contactUs?: boolean;\n}\n\nexport interface BaseLayoutProps {\n  location: Location;\n  children: null | ReactNode;\n  socialImage?: string;\n}\n\ntype MarkdownLayoutProps = BaseLayoutProps & {\n  pageContext?:\n    | undefined\n    | {\n        frontmatter?: MDLayoutProps;\n      };\n};\n\ntype LayoutProps = BaseLayoutProps & MDLayoutProps;\n\nexport function Layout({ children, location, title, layout, socialImage = null, contactUs }: LayoutProps) {\n  const content =\n    layout === LayoutSize.Wide ? (\n      children\n    ) : (\n      <RegularLayout className={LayoutSize.Narrow === layout && styles.narrow}>{children}</RegularLayout>\n    );\n\n  return (\n    <LocationContext.Provider value={location}>\n      <SEO title={title} image={socialImage} />\n      <Header />\n      <div className={styles.layout}>\n        {content}\n        {contactUs && <ContactUs />}\n        <Footer />\n      </div>\n    </LocationContext.Provider>\n  );\n}\n\ntype RegularLayoutProps = {\n  className?: string;\n  children: ReactNode;\n};\n\nfunction RegularLayout({ className, children }: RegularLayoutProps) {\n  return <div className={cn(className, 'ktl-layout ktl-layout--center ktl-layout--spacing')}>{children}</div>;\n}\n\nexport function MarkdownLayout({ children, ...props }: LayoutProps) {\n  return (\n    <Layout {...props}>\n      <Markdown>{children}</Markdown>\n    </Layout>\n  );\n}\n\nexport function PageMarkdownLayout({ pageContext, ...props }: MarkdownLayoutProps) {\n  const title = pageContext?.frontmatter?.title;\n  const layout = pageContext?.frontmatter?.layout ?? LayoutSize.Narrow;\n  const contact = pageContext?.frontmatter?.contactUs ?? false;\n\n  return <MarkdownLayout {...props} title={title} layout={layout} contactUs={contact} />;\n}\n\nexport default PageMarkdownLayout;\n","// extracted by mini-css-extract-plugin\nexport var title = \"Post-module--title--44f76\";"],"names":["_createMdxContent","props","_components","Object","assign","p","em","a","h2","ul","li","strong","_provideComponents","components","React","href","id","wrapper","MDXLayout","PageTemplate","_ref","_post$frontmatter$soc","_post$frontmatter$cov","children","textCn","useTextStyles","location","allMdx","nodes","posts","useStaticQuery","post","find","withPrefix","fields","slug","pathname","title","date","frontmatter","coverImage","socialImage","publicURL","pageContext","contactUs","_jsxs","Layout","_jsx","className","cn","style","Markdown","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","LayoutSize","layout","content","Wide","RegularLayout","Narrow","styles","LocationContext","value","SEO","image","Header","ContactUs","Footer","_ref2","MarkdownLayout","_ref3","_ref4","_pageContext$frontmat","_pageContext$frontmat2","_pageContext$frontmat3","_pageContext$frontmat4","_pageContext$frontmat5","contact"],"sourceRoot":""}